rm(list=ls())
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
params <- get_parameters("scEVE")
population <- "C"
records <- initialize_records(dataset_init)
SeuratObject_init <- get_SeuratObject_init(dataset_init)
selected_data <- get_selected_data(population, dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(dataset_init)
dim(selected_data$dataset)
draw_selected_data(population, SeuratObject_init, records)
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
rm(get_base_clusters)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
rm(sceve_GetBaseClusters)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
rm(list=ls())
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
params <- get_parameters("scEVE")
population <- "C"
records <- initialize_records(dataset_init)
SeuratObject_init <- get_SeuratObject_init(dataset_init)
selected_data <- get_selected_data(population, dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(dataset_init)
dim(selected_data$dataset)
draw_selected_data(population, SeuratObject_init, records)
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
head(base_clusters)
p <- draw_base_clusters(data.recursion$SeuratObject, base_clusters)
p <- draw_base_clusters(selected_data$SeuratObject, base_clusters)
rm(list=ls())
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
params <- get_parameters("scEVE")
population <- "C"
records <- initialize_records(dataset_init)
SeuratObject_init <- get_SeuratObject_init(dataset_init)
selected_data <- get_selected_data(population, dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(dataset_init)
dim(selected_data$dataset)
draw_selected_data(population, SeuratObject_init, records)
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
head(base_clusters)
p <- draw_base_clusters(selected_data$SeuratObject, base_clusters)
p <- draw_base_clusters(selected_data$SeuratObject, base_clusters)
robust_clusters <- get_robust_clusters(population, base_clusters, selected_data, records, params, figures=FALSE)
robust_clusters <- get_robust_clusters(population, base_clusters, selected_data, records, params, figures=FALSE)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
source("./R/get_robust_clusters.R")
robust_clusters <- get_robust_clusters(population, base_clusters, selected_data, records, params, figures=FALSE)
print(robust_clusters[[1]])
robust_clusters$C.1
p <- draw_robust_clusters(robust_clusters, selected_data)
rm(get_transaction_database, get_associations, get_strong_similarities, get_samples_of_subgraph, get_subgraphs, filter_conflicting_samples, get_robust_clusters, draw_robust_clusters)
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
source("./R/get_robust_clusters.R")
robust_clusters <- get_robust_clusters(population, base_clusters, selected_data, records, params, figures=FALSE)
print(robust_clusters[[1]])
p <- draw_robust_clusters(robust_clusters, selected_data)
p
source("./R/get_characterized_clusters.R")
characterized_clusters <- get_characterized_clusters(population, robust_clusters, selected_data, params, figures=FALSE)
print(characterized_clusters$C.3$features)
p <- draw_characteristic_features(characterized_clusters)
rm(sceve_GetCharacteristicFeatures, sceve_GetCharacterizedClusters, add_leftover_cluster, get_characterized_clusters, generate_color_scale, draw_characteristic_features)
source("./R/get_characterized_clusters.R")
characterized_clusters <- get_characterized_clusters(population, robust_clusters, selected_data, params, figures=FALSE)
print(characterized_clusters$C.3$features)
p <- draw_characteristic_features(characterized_clusters)
p
characterized_clusters$C.1$features
length(characterized_clusters$C.1$features)
?Row.names
?merge
?transform
source("./R/get_recorded_recursion.R")
source("./R/feve_HardClustering.R")
test <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
rm(report_recursion)
source("./R/get_recorded_recursion.R")
records <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
rm(feve_HardClustering)
source("./R/feve_HardClustering.R")
test <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
library(dplyr)
test <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
test
rm(feve_HardClustering)
source("./R/feve_HardClustering.R")
test <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
test
records <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
records
View(records)
records$samples
View(records$samples)
View(records$features)
View(records$meta)
View(records$methods)
get_selected_data(population="C.2", SeuratObject_init, records)
get_selected_data("C.2", SeuratObject_init, records)
records
draw_selected_data("C.2", SeuratObject_init, records)
names(params)
print(params$selected_features_strategy)
f <- function(dataset, params) {sceve_GetSelectedFeatures(dataset, params, n_features=2000)}
params$selected_features_strategy <- f
tmp <- get_selected_data(population="C", expression_init, SeuratObject_init, records, params, figures=FALSE)
f <- function(dataset, params) {sceve_GetSelectedFeatures(dataset, params, n_features=2000)}
params$selected_features_strategy <- f
tmp <- get_selected_data(population="C", dataset_init, SeuratObject_init, records, params, figures=FALSE)
rm(list=ls())
source("./R/sceve_LoadData.R")
source("./R/sceve_GetSelectedFeatures.R")
source("./R/sceve_GetCharacterizedClusters.R")
source("./R/sceve_GetCharacteristicFeatures.R")
source("./R/sceve_GetBaseClusters.R")
source("./R/feve_HardClustering.R")
source("./R/feve.R")
source("./R/get_selected_data.R")
source("./R/misc.R")
source("./R/get_base_clusters.R")
source("./R/get_robust_clusters.R")
source("./R/get_characterized_clusters.R")
source("./R/get_recorded_recursion.R")
source("./R/feve_HardClustering.R")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
params <- get_parameters("scEVE")
population <- "C"
records <- initialize_records(dataset_init)
SeuratObject_init <- get_SeuratObject_init(dataset_init)
selected_data <- get_selected_data(population, dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(dataset_init)
dim(selected_data$dataset)
draw_selected_data(population, SeuratObject_init, records)
base_clusters <- get_base_clusters(population, selected_data, params, figures=FALSE)
head(base_clusters)
p <- draw_base_clusters(selected_data$SeuratObject, base_clusters)
robust_clusters <- get_robust_clusters(population, base_clusters, selected_data, records, params, figures=FALSE)
print(robust_clusters[[1]])
p <- draw_robust_clusters(robust_clusters, selected_data)
p
characterized_clusters <- get_characterized_clusters(population, robust_clusters, selected_data, params, figures=FALSE)
print(characterized_clusters$C.3$features)
p <- draw_characteristic_features(characterized_clusters)
p
records <- get_recorded_recursion(population, characterized_clusters, selected_data, records, params)
draw_selected_data("C.2", SeuratObject_init, records)
names(params)
print(params$selected_features_strategy)
f <- function(dataset, params) {sceve_GetSelectedFeatures(dataset, params, n_features=2000)}
params$selected_features_strategy <- f
tmp <- get_selected_data(population="C", dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(tmp$expression)
f <- function(dataset, params) {sceve_GetSelectedFeatures(dataset, params, n_features=2000)}
params$selected_features_strategy <- f
tmp <- get_selected_data(population="C", dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(tmp$dataset)
set.seed(1)
g <- function(dataset, params) {sample(rownames(dataset), size=1000)}
params$selected_features_strategy <- g
tmp <- get_selected_data("C", dataset_init, SeuratObject_init, records, params, figures=FALSE)
dim(tmp$dataset)
print(params$base_clusters_strategy)
print(params$marker_features_strategy)
print(params$characteristic_features_strategy)
characterized_clusters
print(params$characterized_clusters_strategy)
print(params$cluster_memberships_strategy)
library(sessioninfo)
sessioninfo::session_info()
devtools::load_all(".", vignettes=FALSE)
devtools::load_all(".")
devtools::check(".", vignettes=FALSE)
devtools::load_all(".")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
library(feve)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset <- data$dataset
ground_truth <- data$ground_truth
dim(dataset)
unique(ground_truth)
params <- get_parameters("scEVE")
results <- feve(expression.init, params=params)
rm(dataset)
rm(list=ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
library(feve)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
ground_truth <- data$ground_truth
dim(dataset)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
library(feve)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
ground_truth <- data$ground_truth
dim(dataset_init)
unique(ground_truth)
params <- get_parameters("scEVE")
results <- feve(dataset_init, params=params)
devtools::check(".", vignettes=FALSE)
devtools::check(".", vignettes=FALSE)
devtools::load_all(".")
data <- sceve_LoadData("Darmanis_HumGBM")
params <- get_parameters("scEVE")
benchmark <- get_benchmark(data, params, "scEVE")
test <- feve(data$dataset, params)
test$records
source("./R/get_summary_plot.R")
source("./R/get_summary_plot.R")
source("./R/get_summary_plot.R")
get_tree_data(test$records$meta)
?as.phylo
rm(get_tree_data)
source("./R/get_summary_plot.R")
get_tree_data(test$records$meta)
x <- data.frame(parent=test$records$meta$parent, node=rownames(records_meta[-1,]))
x <- data.frame(parent=test$records$meta[-1]$parent, node=rownames(records_meta[-1,]))
test$records
test$records$meta
test$records$meta[-1]
test$records$meta[-1,]
x <- test$records$meta[-1,]
tidytree::as.phylo(x)
?data.frame
y <- data.frame(parent=x$parent, node=rownames(x))
y
tidytree::as.phylo(y)
y
version(tidytree)
packageVersion("tidytree")
?as.phylo
ape::as.phylo(y)
packageVersion("ape")
as.igraph(y)
tidytree::as_tibble(y)
tidytree::as.phylo(tidytree::as_tibble(y))
ggplot2::fortify(tidytree::as_tibble(y))
source("./R/get_summary_plot.R")
get_tree_data(test$records$meta)
source("./R/get_summary_plot.R")
get_tree_data(test$records$meta)
install.packages("tidytree")
tidytree::as.phylo(y)
y
tidytree::as.phylo(x)
x
ggplot2::fortify(y)
library(dplyr)
tidytree::as.phylo(x)
library(ggtree)
tidytree::as.phylo(x)
x
packageVersion("tidytree")
test
x <- test$records$meta
ggtree::as.phylo(x)
tidytree::as.phylo(x)
x
source("./R/get_summary_plot.R")
get_tree_data(x)
tree_data <- get_tree_data(x)
get_tree_plot(tree_data)
get_cluster_sizes(test$records$samples)
source("./R/get_summary_plot.R")
get_cluster_sizes(test$records$samples)
cluster_sizes <- get_cluster_sizes(test$records$samples)
get_barplot_sizes(tree_data, test$records$samples)
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
y <- test$records$features
y[y > 0]
y[y > 0,]
y[y[, "C.1"]>0,]
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
get_cluster_features(test$records$features)
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
y
y[y[, "C.1"]>0,]
y[y[, "C.L.1"]>0,]
source("./R/get_summary_plot.R")
get_cluster_features(test$records$features)
get_cluster_features(test$records$features[-1,])
get_cluster_features(y)
y
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
get_cluster_features(y[, -1])
get_cluster_features(y[, c("C.1", "C.2")])
source("./R/get_summary_plot.R")
get_cluster_features(y[, c("C.1", "C.2")])
source("./R/get_summary_plot.R")
get_cluster_features(y[, c("C.1", "C.2")])
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
source("./R/get_summary_plot.R")
get_cluster_features(y)
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_barplot_features(tree_data,y)
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_barplot_features(tree_data,y)
source("./R/get_summary_plot.R")
get_summary_plot(test$records)
source("./R/get_summary_plot.R")
get_summary_plot(test$records)
source("./R/get_summary_plot.R")
get_summary_plot(test$records)
rm(list=ls())
devtools::check(".", vignettes=FALSE)
usethis::use_package("ggtree")
usethis::use_package("patchwork")
usethis::use_package("tidytree")
devtools::check(".", vignettes=FALSE)
devtools::load_all(".")
library(feve)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
ground_truth <- data$ground_truth
dim(dataset_init)
unique(ground_truth)
params <- get_parameters("scEVE")
results <- feve(dataset_init, params=params)
devtools::load_all(".")
warnings()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message = FALSE,
warning = FALSE
)
library(feve)
data <- sceve_LoadData("Darmanis_HumGBM")
dataset_init <- data$dataset
ground_truth <- data$ground_truth
dim(dataset_init)
unique(ground_truth)
params <- get_parameters("scEVE")
results <- feve(dataset_init, params=params)
p <- get_summary_plot(results$records)
p <- get_summary_plot(results$records)
p
devtools::check(".", vignettes=FALSE)
source("./R/get_benchmark.R")
library(feve)
sceve_GetDatasets()
data <- sceve_LoadData("Darmanis_HumGBM")
params <- get_parameters("scEVE")
benchmark <- get_benchmark(data, params, "scEVE")
benchmark
View(benchmark)
devtools::check(".", vignettes=FALSE)
devtools::load_all(".")
library(feve)
sceve_GetDatasets()
data <- sceve_LoadData("Darmanis_HumGBM")
params <- get_parameters("scEVE")
benchmark <- get_benchmark(data, params, "scEVE")
benchmark
